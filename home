import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:final_done/setup/groupmap.dart';
import 'package:final_done/setup/groups.dart';
import 'package:final_done/setup/profile.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

class Home extends StatefulWidget {
 // const Home({
   //  required Key key,
    //required this.user
//})  : super(key: key);
  //    final UserCredential user;

   late Map data;



  @override
  _HomeState createState() => _HomeState();
}



class _HomeState extends State<Home> {
  @override
  Widget build(BuildContext context) {
    var data;
    return Scaffold(
      appBar: AppBar(
        title: Text('Home '),
        centerTitle: true,
        backgroundColor: Colors.deepPurple,
        elevation: 0.0,
      ),
      body: Padding(
        padding: EdgeInsets.fromLTRB(50.0, 30.0, 30.0, 0.0),
        child: Column(crossAxisAlignment: CrossAxisAlignment.center,
          children: <Widget>[
            Text(
                'We help your loved ones know your exact location barring all the geographical boundaries',
                style: TextStyle(
                  color: Colors.redAccent,
                  letterSpacing: 1.0,
                  fontSize: 20.0,
                  fontWeight: FontWeight.w900,
                )),
            SizedBox(height: 80.0,),
            Column(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              children: <Widget>[
                //ElevatedButton(onPressed: addUser,
                  //  child: Text('ADD user'),
                    //style: ButtonStyle(
                      //backgroundColor: MaterialStateProperty.all<Color>(
                        //  Colors.pinkAccent),
                    //)),
                SizedBox(height: 40.0,),
                ElevatedButton(onPressed: updateUser,
                    child: Text('UPDATE user'),
                    style: ButtonStyle(
                      backgroundColor: MaterialStateProperty.all<Color>(
                          Colors.purpleAccent),
                    )),
                //SizedBox(height: 40.0,),
                //ElevatedButton(onPressed: deleteUser,
                  //  child: Text('DELETE user'),
                    //style: ButtonStyle(
                      //backgroundColor: MaterialStateProperty.all<Color>(
                        //  Colors.pink),
                    //)),
                SizedBox(height: 40.0,),
                ElevatedButton(onPressed: () {
                  Navigator.push(context, MaterialPageRoute(builder: (context) => MemberInfo()));
                },
                    child: Text('GET user'),
                    style: ButtonStyle(
                      backgroundColor: MaterialStateProperty.all<Color>(
                          Colors.purple),
                    )),
                SizedBox(height: 40.0,),
                ElevatedButton(onPressed: () {Navigator.push(context, MaterialPageRoute(builder: (context) => Groups(name: '')));},
                    child: Text('go to groups')),
                SizedBox(height: 40.0,),
                ElevatedButton(onPressed: () {Navigator.push(context, MaterialPageRoute(builder: (context) => MyLocation(username: '', userid: '', users: [], grpid: '', userlat: 76 , userlong:87 )));},
                    child: Text('view location'))
                //Text(
                  //data.toString(),
                 // style: fontWeight: FontWeight.bold,
                //)

              ],
            ),


          ],

        ),

      ),
    );
  }
  addUser() {
    Map<String,dynamic> demoDATA={"email": "trisha1@gmail.com","name":"TRISHA"};
    CollectionReference collectionReference= FirebaseFirestore.instance.collection('data');
    collectionReference.add(demoDATA);
  }

  deleteUser() async {
    CollectionReference collectionReference = FirebaseFirestore.instance.collection('data');
    QuerySnapshot querySnapshot = await collectionReference.get();
    querySnapshot.docs[0].reference.delete();
  }
  updateUser() async {
    CollectionReference collectionReference = FirebaseFirestore.instance.collection('data');
    QuerySnapshot querySnapshot = await collectionReference.get();
   // querySnapshot.docs[0].reference.update("USERNAME": "trisha","EMAIL":"trisha1@gmail.com");
  }
  //getUser() async {
   // CollectionReference collectionReference = FirebaseFirestore.instance.collection('data');
   // collectionReference.snapshots().listen((snapshot) {
    //  setState(() {
      // var data = snapshot.docs[0].data();
     // });
   // }
   // );
 // }

 }

